networks:
  backend: null
  frontend: null
services:
  ghost:
    environment:
      database__client: mysql
      database__connection__database: ghost
      database__connection__host: ghost-db
      database__connection__password: example
      database__connection__user: root
      url: http://localhost:2368
    image: ghost:4-alpine
    restart: always
  ghost-db:
    environment:
      MYSQL_ROOT_PASSWORD: example
    image: mysql:8.0
    restart: always
  homer:
    container_name: homer
    environment:
    - INIT_ASSETS=1
    image: b4bz/homer
    networks:
    - frontend
    - backend
    restart: always
    user: 1000:1000
    volumes:
    - /homer:/www/assets
  jellyfin:
    image: jellyfin/jellyfin:latest
    networks:
    - frontend
    - backend
    restart: always
    volumes:
    - media:/media
    - nas:/nas
    - jellyfin-config:/config
    - jellyfin-cache:/cache
  nextcloud-app:
    build:
      context: .
      dockerfile: ./Dockerfiles/cloud.Dockerfile
    environment:
    - MYSQL_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_DATABASE=nextcloud
    - MYSQL_USER=nextcloud
    - MYSQL_HOST=nextcloud-db
    networks:
    - frontend
    - backend
    restart: always
    volumes:
    - nextcloud-data:/var/www/html
  nextcloud-db:
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
    - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_DATABASE=nextcloud
    - MYSQL_USER=nextcloud
    image: mariadb
    networks:
    - backend
    restart: always
    volumes:
    - nextcloud-db:/var/lib/mysql
  npm-app:
    environment:
    - DB_MYSQL_HOST=npm-db
    - DB_MYSQL_PORT=3306
    - DB_MYSQL_USER=npm
    - DB_MYSQL_PASSWORD=${NGINX_DB_PWD}
    - DB_MYSQL_NAME=npm
    image: jc21/nginx-proxy-manager:latest
    networks:
    - frontend
    - backend
    ports:
    - 8080:8080
    - 81:81
    - 8443:8443
    restart: always
    volumes:
    - npm-data:/data
    - npm-ssl:/etc/letsencrypt
  npm-db:
    environment:
    - MYSQL_ROOT_PASSWORD=${NGINX_DB_PWD}
    - MYSQL_DATABASE=npm
    - MYSQL_USER=npm
    - MYSQL_PASSWORD=${NGINX_DB_PWD}
    image: jc21/mariadb-aria:latest
    networks:
    - backend
    restart: always
    volumes:
    - npm-db:/var/lib/mysql
  umami:
    depends_on:
    - umami-db
    environment:
      DATABASE_TYPE: postgresql
      DATABASE_URL: postgresql://umami:umami@umami-db:5432/umami
      HASH_SALT: replace-me-with-a-random-string
    image: ghcr.io/umami-software/umami:postgresql-latest
    networks:
    - backend
    - frontend
    restart: always
  umami-db:
    environment:
      POSTGRES_DB: umami
      POSTGRES_PASSWORD: umami
      POSTGRES_USER: umami
    image: postgres:12-alpine
    networks:
    - backend
    restart: always
    volumes:
    - ./sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro
    - umami-db-data:/var/lib/postgresql/data
  vikunja-api:
    depends_on:
    - vikunja-db
    environment:
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_DATABASE_HOST: vikunja-db
      VIKUNJA_DATABASE_PASSWORD: secret
      VIKUNJA_DATABASE_TYPE: mysql
      VIKUNJA_DATABASE_USER: vikunja
      VIKUNJA_SERVICE_FRONTENDURL: http://web-vikunja-frontend-1/
      VIKUNJA_SERVICE_JWTSECRET: jwtsecret
    image: vikunja/api
    networks:
    - backend
    - frontend
    restart: unless-stopped
    volumes:
    - ./files:/app/vikunja/files
  vikunja-db:
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: vikunja
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_USER: vikunja
    image: mariadb:10
    networks:
    - backend
    restart: unless-stopped
    volumes:
    - ./vikunja-db:/var/lib/mysql
  vikunja-frontend:
    environment:
      VIKUNJA_API_URL: http://web-vikunja-api:3456/api/v1
    image: vikunja/frontend
    networks:
    - frontend
    - backend
    restart: unless-stopped
version: '3.8'
volumes:
  jellyfin-cache: null
  jellyfin-config: null
  media:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  music:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS/Media/Music
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nas:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nextcloud-data: null
  nextcloud-db: null
  npm-data: null
  npm-db: null
  npm-ssl: null
  photo:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  umami-db-data: null
