networks:
  backend: null
  frontend: null
services:
  homer:
    container_name: homer
    environment:
    - INIT_ASSETS=1
    image: b4bz/homer
    networks:
    - frontend
    - backend
    restart: always
    user: 1000:1000
    volumes:
    - /homer:/www/assets
  immich-database:
    container_name: immich_postgres
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
    image: postgres:14
    networks:
    - backend
    restart: always
    volumes:
    - pgdata:/var/lib/postgresql/data
  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    networks:
    - backend
    restart: always
    volumes:
    - photo:/usr/src/app/upload
    - model-cache:/cache
  immich-microservices:
    container_name: immich_microservices
    depends_on:
    - immich-redis
    - immich-database
    - immich-typesense
    entrypoint:
    - /bin/sh
    - ./start-microservices.sh
    image: ghcr.io/immich-app/immich-server:release
    networks:
    - backend
    restart: always
    volumes:
    - photo:/usr/src/app/upload
  immich-proxy:
    container_name: immich_proxy
    depends_on:
    - immich-server
    environment:
    - IMMICH_SERVER_URL
    - IMMICH_WEB_URL
    image: ghcr.io/immich-app/immich-proxy:release
    logging:
      driver: none
    networks:
    - backend
    - frontend
    ports:
    - 2283:8080
    restart: always
  immich-redis:
    container_name: immich_redis
    image: redis:6.2
    networks:
    - backend
    restart: always
  immich-server:
    container_name: immich_server
    depends_on:
    - immich-redis
    - immich-database
    - immich-typesense
    entrypoint:
    - /bin/sh
    - ./start-server.sh
    image: ghcr.io/immich-app/immich-server:release
    networks:
    - backend
    restart: always
    volumes:
    - photo:/usr/src/app/upload
  immich-typesense:
    container_name: immich_typesense
    environment:
    - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
    - TYPESENSE_DATA_DIR=/data
    image: typesense/typesense:0.24.0
    logging:
      driver: none
    restart: always
    volumes:
    - tsdata:/data
  immich-web:
    container_name: immich_web
    entrypoint:
    - /bin/sh
    - ./entrypoint.sh
    image: ghcr.io/immich-app/immich-web:release
    restart: always
  jellyfin:
    image: jellyfin/jellyfin:latest
    networks:
    - frontend
    - backend
    restart: always
    volumes:
    - media:/media
    - nas:/nas
    - jellyfin-config:/config
    - jellyfin-cache:/cache
  nextcloud-app:
    build:
      context: .
      dockerfile: ./Dockerfiles/cloud.Dockerfile
    environment:
    - MYSQL_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_DATABASE=nextcloud
    - MYSQL_USER=nextcloud
    - MYSQL_HOST=nextcloud-db
    networks:
    - frontend
    - backend
    restart: always
    volumes:
    - nextcloud-data:/var/www/html
  nextcloud-db:
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
    - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_DATABASE=nextcloud
    - MYSQL_USER=nextcloud
    image: mariadb
    networks:
    - backend
    restart: always
    volumes:
    - nextcloud-db:/var/lib/mysql
  npm-app:
    environment:
    - DB_MYSQL_HOST=npm-db
    - DB_MYSQL_PORT=3306
    - DB_MYSQL_USER=npm
    - DB_MYSQL_PASSWORD=${NGINX_DB_PWD}
    - DB_MYSQL_NAME=npm
    image: jc21/nginx-proxy-manager:latest
    networks:
    - frontend
    - backend
    ports:
    - 8080:8080
    - 81:81
    - 8443:8443
    restart: always
    volumes:
    - npm-data:/data
    - npm-ssl:/etc/letsencrypt
  npm-db:
    environment:
    - MYSQL_ROOT_PASSWORD=${NGINX_DB_PWD}
    - MYSQL_DATABASE=npm
    - MYSQL_USER=npm
    - MYSQL_PASSWORD=${NGINX_DB_PWD}
    image: jc21/mariadb-aria:latest
    networks:
    - backend
    restart: always
    volumes:
    - npm-db:/var/lib/mysql
  vikunja-api:
    depends_on:
    - vikunja-db
    environment:
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_DATABASE_HOST: vikunja-db
      VIKUNJA_DATABASE_PASSWORD: secret
      VIKUNJA_DATABASE_TYPE: mysql
      VIKUNJA_DATABASE_USER: vikunja
      VIKUNJA_SERVICE_FRONTENDURL: http://web-vikunja-frontend-1/
      VIKUNJA_SERVICE_JWTSECRET: jwtsecret
    image: vikunja/api
    networks:
    - backend
    - frontend
    restart: unless-stopped
    volumes:
    - ./files:/app/vikunja/files
  vikunja-db:
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: vikunja
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_USER: vikunja
    image: mariadb:10
    networks:
    - backend
    restart: unless-stopped
    volumes:
    - ./vikunja-db:/var/lib/mysql
  vikunja-frontend:
    environment:
      VIKUNJA_API_URL: http://web-vikunja-api:3456/api/v1
    image: vikunja/frontend
    networks:
    - frontend
    - backend
    restart: unless-stopped
version: '3.8'
volumes:
  jellyfin-cache: null
  jellyfin-config: null
  media:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  model-cache: null
  music:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS/Media/Music
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nas:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nextcloud-data: null
  nextcloud-db: null
  npm-data: null
  npm-db: null
  npm-ssl: null
  pgdata: null
  photo:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  tsdata: null
