networks:
  backend: null
  frontend: null
services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    networks:
    - frontend
    - backend
    restart: always
    volumes:
    - media:/media
    - nas:/nas
    - jellyfin-config:/config
    - jellyfin-cache:/cache
  nextcloud-app:
    build:
      context: .
      dockerfile: ./Dockerfiles/cloud.Dockerfile
    environment:
    - MYSQL_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_DATABASE=nextcloud
    - MYSQL_USER=nextcloud
    - MYSQL_HOST=nextcloud-db
    networks:
    - frontend
    - backend
    restart: always
    volumes:
    - nextcloud-data:/var/www/html
  nextcloud-db:
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
    - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_PASSWORD=${NEXTCLOUD_DB_PWD}
    - MYSQL_DATABASE=nextcloud
    - MYSQL_USER=nextcloud
    image: mariadb
    networks:
    - backend
    restart: always
    volumes:
    - nextcloud-db:/var/lib/mysql
  npm-app:
    environment:
    - DB_MYSQL_HOST=npm-db
    - DB_MYSQL_PORT=3306
    - DB_MYSQL_USER=npm
    - DB_MYSQL_PASSWORD=${NGINX_DB_PWD}
    - DB_MYSQL_NAME=npm
    image: jc21/nginx-proxy-manager:latest
    networks:
    - frontend
    - backend
    ports:
    - 8080:8080
    - 81:81
    - 8443:8443
    restart: always
    volumes:
    - npm-data:/data
    - npm-ssl:/etc/letsencrypt
  npm-db:
    environment:
    - MYSQL_ROOT_PASSWORD=${NGINX_DB_PWD}
    - MYSQL_DATABASE=npm
    - MYSQL_USER=npm
    - MYSQL_PASSWORD=${NGINX_DB_PWD}
    image: jc21/mariadb-aria:latest
    networks:
    - backend
    restart: always
    volumes:
    - npm-db:/var/lib/mysql
  photo-mariadb:
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED
      --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512
      --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    environment:
      MARIADB_AUTO_UPGRADE: '1'
      MARIADB_DATABASE: photoprism
      MARIADB_INITDB_SKIP_TZINFO: '1'
      MARIADB_PASSWORD: insecure
      MARIADB_ROOT_PASSWORD: insecure
      MARIADB_USER: photoprism
    image: mariadb:10.10
    networks:
    - backend
    - frontend
    restart: unless-stopped
    security_opt:
    - seccomp:unconfined
    - apparmor:unconfined
    volumes:
    - ./database:/var/lib/mysql
  photoprism:
    depends_on:
    - photo-mariadb
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: admin
      PHOTOPRISM_ADMIN_USER: admin
      PHOTOPRISM_AUTH_MODE: password
      PHOTOPRISM_DATABASE_DRIVER: mysql
      PHOTOPRISM_DATABASE_NAME: photoprism
      PHOTOPRISM_DATABASE_PASSWORD: insecure
      PHOTOPRISM_DATABASE_SERVER: photo-mariadb:3306
      PHOTOPRISM_DATABASE_USER: photoprism
      PHOTOPRISM_DETECT_NSFW: 'false'
      PHOTOPRISM_DISABLE_CHOWN: 'false'
      PHOTOPRISM_DISABLE_CLASSIFICATION: 'false'
      PHOTOPRISM_DISABLE_FACES: 'false'
      PHOTOPRISM_DISABLE_RAW: 'false'
      PHOTOPRISM_DISABLE_SETTINGS: 'false'
      PHOTOPRISM_DISABLE_TENSORFLOW: 'false'
      PHOTOPRISM_DISABLE_WEBDAV: 'false'
      PHOTOPRISM_EXPERIMENTAL: 'false'
      PHOTOPRISM_HTTP_COMPRESSION: gzip
      PHOTOPRISM_JPEG_QUALITY: 85
      PHOTOPRISM_LOG_LEVEL: info
      PHOTOPRISM_ORIGINALS_LIMIT: 5000
      PHOTOPRISM_RAW_PRESETS: 'false'
      PHOTOPRISM_READONLY: 'false'
      PHOTOPRISM_SITE_AUTHOR: ''
      PHOTOPRISM_SITE_CAPTION: AI-Powered Photos App
      PHOTOPRISM_SITE_DESCRIPTION: ''
      PHOTOPRISM_SITE_URL: http://photoprism.me:2342/
      PHOTOPRISM_UPLOAD_NSFW: 'true'
    image: photoprism/photoprism:latest
    networks:
    - frontend
    - backend
    restart: unless-stopped
    security_opt:
    - seccomp:unconfined
    - apparmor:unconfined
    volumes:
    - media:/photoprism/originals
    - ./storage:/photoprism/storage
    working_dir: /photoprism
  photoprism-watchtower:
    environment:
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_POLL_INTERVAL: 7200
    image: containrrr/watchtower
    networks:
    - backend
    profiles:
    - update
    restart: unless-stopped
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ~/.docker/config.json:/config.json
  vikunja-api:
    depends_on:
    - vikunja-db
    environment:
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_DATABASE_HOST: vikunja-db
      VIKUNJA_DATABASE_PASSWORD: secret
      VIKUNJA_DATABASE_TYPE: mysql
      VIKUNJA_DATABASE_USER: vikunja
      VIKUNJA_SERVICE_FRONTENDURL: http://web-vikunja-frontend-1/
      VIKUNJA_SERVICE_JWTSECRET: jwtsecret
    image: vikunja/api
    networks:
    - backend
    - frontend
    restart: unless-stopped
    volumes:
    - ./files:/app/vikunja/files
  vikunja-db:
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: vikunja
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_USER: vikunja
    image: mariadb:10
    networks:
    - backend
    restart: unless-stopped
    volumes:
    - ./vikunja-db:/var/lib/mysql
  vikunja-frontend:
    environment:
      VIKUNJA_API_URL: http://web-vikunja-api:3456/api/v1
    image: vikunja/frontend
    networks:
    - frontend
    - backend
    restart: unless-stopped
version: '3.8'
volumes:
  jellyfin-cache: null
  jellyfin-config: null
  media:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nas:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  npm-data: null
  npm-db: null
  npm-ssl: null
  owncloud-files: null
  owncloud-mysql: null
  owncloud-redis: null
  photoview_api_cache: null
  photoview_db_data: null
