networks:
  backend: null
  frontend: null
services:
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    networks:
    - frontend
    - backend
    restart: unless-stopped
    volumes:
    - grafana-data:/var/lib/grafana
  homer:
    container_name: homer
    environment:
    - INIT_ASSETS=1
    image: b4bz/homer
    networks:
    - frontend
    - backend
    restart: always
    user: 1000:1000
    volumes:
    - /homer:/www/assets
  keycloak:
    command: start
    container_name: keycloak
    depends_on:
    - keycloak-db
    environment:
      KC_DB: postgres
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USER: keycloak
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_PROXY: edge
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    image: quay.io/keycloak/keycloak:latest
    networks:
    - frontend
    - backend
    restart: always
  keycloak-db:
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
      POSTGRES_USER: keycloak
    image: postgres:15
    networks:
    - backend
    restart: always
    security_opt:
    - label:disable
    volumes:
    - ./container-data/keycloak-db:/var/lib/postgresql/data
    - /etc/localtime:/etc/localtime:ro
  nextcloud-aio-mastercontainer:
    container_name: nextcloud-aio-mastercontainer
    environment:
    - AIO_DISABLE_BACKUP_SECTION=false
    - APACHE_PORT=11000
    - APACHE_IP_BINDING=172.31.0.104
    image: nextcloud/all-in-one:latest
    init: true
    networks:
    - frontend
    restart: always
    volumes:
    - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
    - /var/run/docker.sock:/var/run/docker.sock:ro
  npm-app:
    environment:
    - DB_MYSQL_HOST=npm-db
    - DB_MYSQL_PORT=3306
    - DB_MYSQL_USER=npm
    - DB_MYSQL_PASSWORD=${NGINX_DB_PWD}
    - DB_MYSQL_NAME=npm
    image: jc21/nginx-proxy-manager:latest
    networks:
    - frontend
    - backend
    ports:
    - 8080:8080
    - 81:81
    - 8443:8443
    - 80:80
    - 443:443
    restart: always
    volumes:
    - npm-data:/data
    - npm-ssl:/etc/letsencrypt
  npm-db:
    environment:
    - MYSQL_ROOT_PASSWORD=${NGINX_DB_PWD}
    - MYSQL_DATABASE=npm
    - MYSQL_USER=npm
    - MYSQL_PASSWORD=${NGINX_DB_PWD}
    image: jc21/mariadb-aria:latest
    networks:
    - backend
    restart: always
    volumes:
    - npm-db:/var/lib/mysql
  outline:
    command: sh -c "yarn start --env=production-ssl-disabled"
    container_name: outline
    depends_on:
    - outline_postgres
    - outline_redis
    - outline_minio
    environment:
    - PGSSLMODE=disable
    - SECRET_KEY=${SECRET_KEY}
    - UTILS_SECRET=${UTILS_SECRET}
    - DATABASE_URL=postgres://outline:${POSTGRES_PASSWORD}@outline_postgres:5432/outline
    - REDIS_URL=redis://outline_redis:6379
    - URL=${WIKI_URL}
    - PORT=80
    - AWS_ACCESS_KEY_ID=minio
    - AWS_REGION=us-east-1
    - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
    - AWS_S3_UPLOAD_BUCKET_URL=${WIKIDATA_URL}
    - AWS_S3_UPLOAD_BUCKET_NAME=outline
    - AWS_S3_FORCE_PATH_STYLE=true
    - AWS_S3_ACL=private
    - SMTP_HOST=${SMTP_HOST}
    - SMTP_PORT=${SMTP_PORT}
    - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
    - SMTP_REPLY_EMAIL=${SMTP_REPLY_EMAIL}
    - SMTP_SECURE=${SMTP_SECURE}
    - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
    - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
    - OIDC_AUTH_URI=${OIDC_AUTH_URI}
    - OIDC_TOKEN_URI=${OIDC_TOKEN_URI}
    - OIDC_USERINFO_URI=${OIDC_USERINFO_URI}
    - OIDC_DISPLAY_NAME=${OIDC_DISPLAY_NAME}
    - OIDC_USERNAME_CLAIM=email
    image: outlinewiki/outline:latest
    networks:
    - backend
    - frontend
    restart: always
    user: root
  outline_minio:
    command: server /data --console-address :9001
    container_name: outline_minio
    environment:
    - MINIO_ROOT_USER=minio
    - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
    image: minio/minio
    networks:
    - frontend
    restart: always
    security_opt:
    - label:disable
    volumes:
    - ./container-data/outline-data:/data
    - /etc/localtime:/etc/localtime:ro
  outline_postgres:
    container_name: outline_postgres
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_USER=outline
    - POSTGRES_DB=outline
    image: postgres:15
    networks:
    - backend
    restart: always
    security_opt:
    - label:disable
    volumes:
    - ./container-data/outline-db:/var/lib/postgresql/data
    - /etc/localtime:/etc/localtime:ro
  outline_redis:
    container_name: outline_redis
    image: redis
    networks:
    - backend
    restart: always
  prometheus:
    command: --config.file=/config/prometheus.yaml
    container_name: prometheus
    image: prom/prometheus
    networks:
    - backend
    restart: unless-stopped
    volumes:
    - /etc/prometheus:/config:ro
    - prometheus-data:/prometheus
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    networks:
    - frontend
    restart: unless-stopped
    volumes:
    - vaultwarden-data:/data
  vikunja-api:
    depends_on:
    - vikunja-db
    environment:
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_DATABASE_HOST: vikunja-db
      VIKUNJA_DATABASE_PASSWORD: secret
      VIKUNJA_DATABASE_TYPE: mysql
      VIKUNJA_DATABASE_USER: vikunja
      VIKUNJA_SERVICE_FRONTENDURL: https://vikunja.phoiweb.com:8443/
      VIKUNJA_SERVICE_JWTSECRET: jwtsecret
    image: vikunja/api
    networks:
    - backend
    - frontend
    restart: unless-stopped
    volumes:
    - ./files:/app/vikunja/files
  vikunja-db:
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: vikunja
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_USER: vikunja
    image: mariadb:10
    networks:
    - backend
    restart: unless-stopped
    volumes:
    - ./vikunja-db:/var/lib/mysql
  vikunja-frontend:
    environment:
      VIKUNJA_API_URL: https://api.vikunja.phoiweb.com:8443
    image: vikunja/frontend
    networks:
    - frontend
    - backend
    restart: unless-stopped
version: '3.8'
volumes:
  grafana-data:
    driver: local
  jellyfin-cache: null
  jellyfin-config: null
  media:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  music:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS/Media/Music
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nas:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/NAS
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer
  npm-data: null
  npm-db: null
  npm-ssl: null
  photo:
    driver: local
    driver_opts:
      device: //${TRUENAS_IP}/Photo
      o: username=${SMB_ID},password=${SMB_PWD},rw
      type: cifs
  prometheus-data:
    driver: local
  vaultwarden-data: null
